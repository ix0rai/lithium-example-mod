plugins {
    id "fabric-loom" version "0.13-SNAPSHOT"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

version = project.mod_version
group = project.maven_group

configurations {
    shadow
    api.extendsFrom shadow
}

shadowJar {
    dependsOn jar
    configurations = [project.configurations.shadow]
    destinationDirectory.set(file("${project.buildDir}/devlibs"))
    archiveClassifier.set("dev")
}
prepareRemapJar.dependsOn(shadowJar)

dependencies {
    // versions are defined in gradle.properties
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // lithium api
    // we include this in the built jar file so that the user does not have to download additional libraries
    shadow(files("libs/lithium-fabric-${project.lithium_api_version}-api-dev.jar"))
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
